services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.7.2
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      - "29092:29092"

  mongodb1:
    image: mongo:7.0
    container_name: mongodb1-kafka
    command: ["--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - mongodb-data1:/data/db
    ports:
      - "27017:27017"
    restart: "on-failure"

  mongodb2:
    image: mongo:7.0
    container_name: mongodb2-kafka
    command: ["--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - mongodb-data2:/data/db
    ports:
      - "27018:27017"
    restart: "on-failure"

  postgres:
    image: postgres:15
    container_name: postgres-kafka
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: kafka_sink_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.4.0
    container_name: kibana-kafka
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.0
    container_name: elasticsearch-kafka
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.7.2
    container_name: kafka-connect
    depends_on:
      - kafka
      - mongodb1
      - postgres
      - elasticsearch
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_GROUP_ID: "kafka-connect-group"
      CONNECT_CONFIG_STORAGE_TOPIC: "connect-configs"
      CONNECT_OFFSET_STORAGE_TOPIC: "connect-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "connect-status"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
    ports:
      - "8083:8083"
    volumes:
      - ./plugins:/usr/share/confluent-hub-components
    command:
      - bash
      - -c
      - |
        confluent-hub install --no-prompt mongodb/kafka-connect-mongodb:1.11.0
        confluent-hub install --no-prompt confluentinc/kafka-connect-elasticsearch:14.0.9
        /etc/confluent/docker/run

volumes:
  mongodb-data1:
  mongodb-data2:
  postgres-data:
  elasticsearch-data:
